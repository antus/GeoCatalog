version: '3.9'

services:

  postgis:
    image: kartoza/postgis:13
    container_name: cartoview_postgis
    volumes:
      - postgis-data:/var/lib/postgresql
      # - dbbackups:/backups
    env_file:
      - ./env/postgis.env
    expose:
      - "5432"
    ports:
      - "5444:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"

  elasticsearch:
    image: elasticsearch:5.6.12-alpine
    container_name: cartoview_elasticsearch
    restart: unless-stopped
    stdin_open: true
    tty: true
    expose:
      - "9300"
      - "9200"

  rabbitmq:
    image: rabbitmq:latest
    container_name: cartoview_rabbitmq
    restart: unless-stopped
    expose:
      - "5672"
      - "15672"

  data-dir-conf:
    image: geonode/geoserver_data:2.20.7
    restart: on-failure
    container_name: cartoview_gs_datadir
    command: /bin/true
    volumes:
      - geoserver-dir:/geoserver_data/data
      - ./geoserver-data/global.xml:/geoserver_data/data/global.xml
      - ./geoserver-data/config.xml:/geoserver_data/data/security/filter/geonode-oauth2/config.xml

  geoserver:
    image: geonode/geoserver:2.20.7
    container_name: cartoview_geoserver
    depends_on:
      - postgis
      - data-dir-conf
    restart: unless-stopped
    expose:
      - "8080"

    volumes:
      - geoserver-dir:/geoserver_data/data
      #- ./geoserver-data/web.xml:/usr/local/tomcat/webapps/geoserver/WEB-INF/web.xml
    env_file:
      - ./env/tomcat.env

  cartoview:
    build: .
    image: cartoview:latest
    container_name: cartoview_django
    command: bash -c "python manage.py cherry_server"
    restart: unless-stopped
    hostname: cartoview
    depends_on:
      - postgis
      - geoserver
    env_file:
      - ./env/django.env
    volumes:
      - "./:/usr/src/carto_app/cartoview"
      - geoserver-dir:/geoserver_data/data
      - ./static/:/usr/src/carto_app/cartoview/cartoview/static
    expose:
      - "8000"

  celery:
    image: cartoview:latest
    container_name: cartoview_celery
    command: bash -c "celery -A cartoview.celery:app worker -B -E --statedb=./worker.state -s ./celerybeat-schedule --loglevel=INFO --concurrency=10 -n worker1@%h -f /var/log/celery.log"
    restart: unless-stopped
    hostname: celery
    depends_on:
      - postgis
      - rabbitmq
      - geoserver
    stdin_open: true
    env_file:
      - ./env/celery.env
    volumes:
      - "./:/code/"

  nginx:
    image: nginx:alpine
    container_name: cartoview_nginx
    restart: unless-stopped
    expose:
      - "80"
    volumes:
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static/:/cartoview/static/
      #- ./static_app_manager/:/cartoview/static/app_manager/
      - ./uploaded/:/cartoview/uploaded/
      - ./security/localhost.crt:/etc/ssl/certs/nginx-certificate.crt
      - ./security/localhost.key:/etc/ssl/certs/nginx.key
    ports:
      - "80:80"
      - "443:443"
  
volumes:
  geoserver-dir:
  postgis-data:
  illegalbuilding-postgresql-data:



  
