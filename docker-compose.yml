version: '3.9'

services:

  # POSTGIG
  postgis:
    image: kartoza/postgis:${POSTGIS_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-postgis
    volumes:
      - db-data:/var/lib/postgresql
      - db-backups:/backups
      - ./init_host_env/postgis/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./env/postgis.env
    expose:
      - "5432"
    healthcheck:
      test: "pg_isready -d postgres -U postgres"
    # uncomment to enable remote connections to postgres
    ports:
      - "5444:5432"      
    restart: on-failure

  # ELASTIC-SEARCH
  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-elastic-search
    restart: unless-stopped
    stdin_open: true
    tty: true
    expose:
      - "9300"
      - "9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  # RABBIT-MQ
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-rabbitmq
    restart: unless-stopped
    expose:
      - "5672"
      - "15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq      

  # GEOSERVER-DATA-DIR
  data-dir-conf:
    image: geonode/geoserver_data:${GEOSERVER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-gs-data-dir-conf
    restart: on-failure
    command: /bin/true
    volumes:
      - geoserver-dir:/geoserver_data/data

  # GEOSERVER 
  geoserver:
    image: geonode/geoserver:${GEOSERVER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-geoserver
    depends_on:
      - postgis
      - data-dir-conf
    restart: unless-stopped
    expose:
      - "8080"
    volumes:
      - geoserver-dir:/geoserver_data/data
    env_file:
      - ./env/tomcat.env
  
  # CARTOVIEW
  cartoview:
    build: .
    image: cartoview:latest
    container_name: ${COMPOSE_PROJECT_NAME}-django
    command: bash -c "python manage.py cherry_server"
    restart: unless-stopped
    hostname: cartoview
    depends_on:
      - postgis
      - geoserver
    env_file:
      - ./env/django.env
    volumes:
      - "./:/usr/src/carto_app/cartoview"
      - geoserver-dir:/geoserver_data/data
    expose:
      - "8000"
      
  # CELERY      
  celery:
    image: cartoview:latest
    container_name: ${COMPOSE_PROJECT_NAME}-celery
    command: bash -c "celery -A cartoview.celery:app worker -B -E --statedb=./worker.state -s ./celerybeat-schedule --loglevel=INFO --concurrency=10 -n worker1@%h -f /var/log/celery.log"
    restart: unless-stopped
    hostname: celery
    depends_on:
      - postgis
      - rabbitmq
      - geoserver
    stdin_open: true
    env_file:
      - ./env/celery.env
    volumes:
      - "./:/code/"
  
  # NGINX  
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    restart: unless-stopped
    expose:
      - "80"
    volumes:
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static/:/cartoview/static/
      - ./uploaded/:/cartoview/uploaded/
    ports:
      - "80:80"

volumes:
  db-data:
    name: ${COMPOSE_PROJECT_NAME}-db-data
  db-backups:
    name: ${COMPOSE_PROJECT_NAME}-db-backups
  geoserver-dir:  
    name: ${COMPOSE_PROJECT_NAME}-gs-data-dir  
  es-data:
    name: ${COMPOSE_PROJECT_NAME}-es-data  
  rabbitmq-data:
    name: ${COMPOSE_PROJECT_NAME}-rabbitmq-data
  
